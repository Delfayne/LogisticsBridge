buildscript { 
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_ver}"
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'
apply plugin: 'java-library'

version = "2.0.0-alpha"

minecraft {
    mappings channel: 'stable', version: "${mappings_ver}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            workingDirectory project.file('run-server')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}


repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'JitPack.io'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'forge'
        url = 'https://files.minecraftforge.net/maven'
    }
    maven {
        name = 'minecraftlibs'
        url = 'https://libraries.minecraft.net'
    } 
    flatDir { dirs "./lib" }
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: "${kotlin_ver}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: "${kotlin_ver}"
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core' , version: "${kotlin_ver}"
    //
    minecraft group: 'net.minecraftforge', name: 'forge', version: "${mc_ver}-${forge_ver}"
    //
    compileOnly ":NotEnoughItems-${mc_ver}-${nei_ver}-deobf"
    implementation fg.deobf("curse.maven:logistics-pipes-232838:4481079")
    api fg.deobf ("curse.maven:MCMultiPart-239431:2615930")
    api fg.deobf ("curse.maven:ThermalDynamics-227443:2920505")
    api fg.deobf ("curse.maven:refinedstorage-243076:2940914")
    api fg.deobf ("curse.maven:appliedenergistics2-223794:2747063")
    //
    runtimeOnly ":refinedstorage-${rs_ver}"
    runtimeOnly ":MCMultiPart-${mcmp_ver}"
    runtimeOnly ":ThermalExpansion-${mc_ver}-${te_ver}-universal"
    runtimeOnly ":ThermalFoundation-${mc_ver}-${tf_ver}-universal"
    runtimeOnly ":CoFHCore-${mc_ver}-${cofhc_ver}-deobf"
    runtimeOnly ":CoFHWorld-${mc_ver}-${cofhw_ver}-universal"
    runtimeOnly ":RedstoneFlux-${mc_ver_short}-${rf_ver}-deobf"
    runtimeOnly ":CodeChickenLib-${mc_ver}"
    //
    shade 'org.javassist:javassist:3.28.0-GA'
    //
    implementation project(':LBTextures')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "modversion", project.version
    inputs.property "mcversion", "${mc_ver}"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'modversion':project.version, 'mcversion':"${mc_ver}"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
 
jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

jar.finalizedBy('reobfJar')
